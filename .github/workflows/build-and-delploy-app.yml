name: Build and Deploy Application

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/IaC.yml'
      - '.github/workflows/custom-domain.yml'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

env:
  ResourceGroup: ent-demo-rg
  SwaName: ent-demo-swa

jobs:
  build-and-test:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: windows-latest
    name: Build and Test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          include-prerelease: false

      - name: 'Run Tests'
        run: dotnet test --configuration Release 
          
      - name: Client Build
        run: dotnet publish ./Client/Client.csproj --output ./dist/client

      - name: Api Build
        run: dotnet publish ./Api/Api.csproj --output ./dist/api

      - name: Upload Published Files
        uses: actions/upload-artifact@v4
        with:
          name: Application
          path: dist

      - name: Set the SWA environment
        id: swa-env
        run: |
          if ($env:GITHUB_EVENT_NAME -eq "push") {
            "ENVIRONMENT=default" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } else {
            "ENVIRONMENT=staging${{ github.event.pull_request.number }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }
        shell: pwsh

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Node
        uses: actions/setup-node@v4

      - name: Install SWA CLI
        run:  npm install -g @azure/static-web-apps-cli

      - name: Deploy to SWA
        run:  |
          $Secret = az staticwebapp secrets list -n ${{ env.SwaName }} -g ${{ env.ResourceGroup}} --query 'properties.apiKey' -o tsv
          swa deploy deploy -d $Secret --env ${{ steps.swa-env.outputs.ENVIRONMENT }} -V  silly

      - name: Get Staging Hostname
        if: github.event_name == 'pull_request'
        id: get-hostname
        run: |
          $SWA_HOSTNAME = az staticwebapp environment list -n ${{ env.SwaName }} -g ${{ env.ResourceGroup}} --query "[?contains(hostname,'${{ steps.swa-env.outputs.ENVIRONMENT }}')].hostname " -o tsv
          echo $SWA_HOSTNAME
          "SWA_HOSTNAME=$SWA_HOSTNAME" | Out-File -FilePath $env:GITHUB_OUTPUT -Append}} 
        shell: pwsh

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Staging Environment Updated

            Test here https://${{ steps.get-hostname.outputs.SWA_HOSTNAME }}

            *Pushed by: @${{ github.actor }}*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Remove Staging Environment
        id: get-api-key
        uses: azure/CLI@v2
        with:
          azcliversion: 2.42.0
          inlineScript: |
            az staticwebapp environment delete --name $SwaName --resource-group $ResourceGroup --environment-name staging${{ github.event.number }} --yes
